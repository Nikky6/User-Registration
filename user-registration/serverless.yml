service: user-registration
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x

custom:
  serverless-offline:
    localhost: 3008
    httpPort: 3008
    lambdaPort: 4008

  middleware:
    cleanFolder: false
    pre:
      - ./middleware.verifyToken
  
plugins:
  - serverless-offline
  - serverless-esbuild

functions:
  api:
    handler: index.handler
    events:
      - httpApi:
          path: /
          method: get

  register: 
    handler: controller/user-controller.register
    events:
      - httpApi:
          path: user/register
          method: POST
          cors:
            origin: ["*"]
            headers: ["*"]

    login: 
    handler: controller/user-controller.login
    events:
      - httpApi:
          path: user/login
          method: POST
          cors:
            origin: ["*"]
            headers: ["*"]

  userList: 
    handler: controller/user-controller.userList
    events:
      - httpApi:
          path: user/list
          method: GET
          cors:
            origin: ["*"]
            headers: ["*"]

  getUserById: 
    handler: controller/user-controller.getUserById
    events:
      - httpApi:
          path: user/{id}
          method: GET
          cors:
            origin: ["*"]
            headers: ["*"]

  updateUserDetails: 
    handler: controller/user-controller.updateUserDetails
    events:
      - httpApi:
          path: user/update
          method: PUT
          cors:
            origin: ["*"]
            headers: ["*"]

  deleteUserDetails: 
    handler: controller/user-controller.deleteUserDetails
    events:
      - httpApi:
          path: user/delete/{_id}
          method: DELETE
          cors:
            origin: ["*"]
            headers: ["*"]

